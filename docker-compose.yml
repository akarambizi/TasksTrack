services:
    # Defines the client service.
    client:
        # Specifies the path to the Dockerfile for building the client's Docker image.
        # './client' is the directory containing the Dockerfile for the client.
        build: ./client
        # Maps port 3000 of the host machine to port 3000 inside the client container.
        # This allows you to access the client service on localhost:3000.
        ports:
            - 3000:3000
        # Mounts the host's ./client directory to a specific directory inside the client container.
        # This allows for hot reloading of code changes.
        volumes:
            - ./client:/app
            # The node_modules directory is excluded from the mount
            - /app/node_modules
        # Specifies the command to start the client application inside the container.
        command: yarn dev --host

    server:
        # Specifies the path to the Dockerfile for building the server's Docker image.
        # './server' is the directory containing the Dockerfile for the server.
        build: ./server
        # Maps port 5206 of the host machine to port 5206 inside the server container.
        # This allows you to access the server service on localhost:5206.
        ports:
            - 5206:5206
        # Mounts the host's ./server directory to a specific directory inside the server container.
        # This allows for hot reloading of code changes.
        volumes:
            - ./server:/app
        # Specifies the command to start the server application inside the container.
        # Updated to ensure compatibility with .NET 8.
        command: dotnet watch run --urls http://*:5206
        # Sets environment variables inside the server container.
        environment:
            - DOTNET_USE_POLLING_FILE_WATCHER=1
            - DOTNET_WATCH_RESTART_ON_RUDE_EDIT=true
        # Specifies that the server service should be started only after the db service has been started.
        # This ensures that the database is ready before the server starts.
        depends_on:
            - db

    db:
        # Specifies the Docker image to use for the db service.
        # 'postgres:17' is the latest stable PostgreSQL release.
        image: postgres:17
        # Mounts a named volume to a specific directory inside the db container.
        # This is where PostgreSQL stores its data. The named volume 'postgres_data' persists data across container restarts.
        volumes:
            - postgres_data:/var/lib/postgresql/data/
        environment:
            - POSTGRES_PASSWORD=postgres
            - POSTGRES_USER=postgres
            - POSTGRES_DB=taskstrack

# Defines the named volumes used by services.
volumes:
    # Defines a volume named postgres_data. This is used by the db service to persist database data.
    postgres_data:
